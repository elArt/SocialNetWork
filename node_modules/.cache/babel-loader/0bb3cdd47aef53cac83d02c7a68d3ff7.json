{"ast":null,"code":"import _toConsumableArray from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\nvar SEND_MESSAGE = \"SEND-MESSAGE\";\nvar initialState = {\n  messages: [{\n    id: 1,\n    message: \"Hi\"\n  }, {\n    id: 2,\n    message: \"How is your it-kamasutra?\"\n  }, {\n    id: 3,\n    message: \"Yo\"\n  }, {\n    id: 4,\n    message: \"Yo\"\n  }, {\n    id: 5,\n    message: \"Yo\"\n  }],\n  dialogs: [{\n    id: 1,\n    name: \"Dimych\"\n  }, {\n    id: 2,\n    name: \"Andrew\"\n  }, {\n    id: 3,\n    name: \"Sveta\"\n  }, {\n    id: 4,\n    name: \"Sasha\"\n  }, {\n    id: 5,\n    name: \"Viktor\"\n  }, {\n    id: 6,\n    name: \"Valera\"\n  }],\n  newMessageBody: \"\"\n};\n\nvar dialogsReducer = function dialogsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_NEW_MESSAGE_BODY:\n      {\n        return _objectSpread({}, state, {\n          newMessageBody: action.body\n        });\n      }\n      ;\n\n    case SEND_MESSAGE:\n      {\n        return _objectSpread({}, state, {\n          messages: _toConsumableArray(state.messages).concat([{\n            id: Date.now(),\n            message: state.newMessageBody\n          }]),\n          newMessageBody: \"\"\n        });\n      }\n      ;\n\n    default:\n      return state;\n  }\n};\n\nexport var updateMessageActionCreator = function updateMessageActionCreator(massage) {\n  return {\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: massage\n  };\n};\nexport var sendMassageActionCreator = function sendMassageActionCreator() {\n  return {\n    type: SEND_MESSAGE\n  };\n};\nexport default dialogsReducer;","map":{"version":3,"sources":["/home/artst/Public/Way of samuray/src/redux/dialogs-reducer.js"],"names":["UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","messages","id","message","dialogs","name","newMessageBody","dialogsReducer","state","action","type","body","Date","now","updateMessageActionCreator","massage","sendMassageActionCreator"],"mappings":";;AAAA,IAAMA,uBAAuB,GAAG,yBAAhC;AACA,IAAMC,YAAY,GAAG,cAArB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CACR;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE;AAAlB,GADQ,EAER;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE;AAAlB,GAFQ,EAGR;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE;AAAlB,GAHQ,EAIR;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE;AAAlB,GAJQ,EAKR;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE;AAAlB,GALQ,CADS;AAQnBC,EAAAA,OAAO,EAAE,CACP;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE;AAAf,GADO,EAEP;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE;AAAf,GAFO,EAGP;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE;AAAf,GAHO,EAIP;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE;AAAf,GAJO,EAKP;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE;AAAf,GALO,EAMP;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,IAAI,EAAE;AAAf,GANO,CARU;AAgBnBC,EAAAA,cAAc,EAAE;AAhBG,CAArB;;AAmBA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,uBAAL;AAA6B;AAC3B,iCACKU,KADL;AAEEF,UAAAA,cAAc,EAAEG,MAAM,CAACE;AAFzB;AAID;AAAA;;AACD,SAAKZ,YAAL;AAAkB;AAChB,iCAAWS,KAAX;AACEP,UAAAA,QAAQ,qBACHO,KAAK,CAACP,QADH,UAEN;AACEC,YAAAA,EAAE,EAAEU,IAAI,CAACC,GAAL,EADN;AAEEV,YAAAA,OAAO,EAAEK,KAAK,CAACF;AAFjB,WAFM,EADV;AAQAA,UAAAA,cAAc,EAAE;AARhB;AAUD;AAAA;;AACD;AACE,aAAOE,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,OAAO,IAAMM,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAAC,OAAO;AAAA,SAAK;AACpDL,IAAAA,IAAI,EAAEZ,uBAD8C;AAEpDa,IAAAA,IAAI,EAAEI;AAF8C,GAAL;AAAA,CAA1C;AAIP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B;AAAA,SAAO;AAAEN,IAAAA,IAAI,EAAEX;AAAR,GAAP;AAAA,CAAjC;AAEP,eAAeQ,cAAf","sourcesContent":["const UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\n\nconst initialState = {\n  messages: [\n    { id: 1, message: \"Hi\" },\n    { id: 2, message: \"How is your it-kamasutra?\" },\n    { id: 3, message: \"Yo\" },\n    { id: 4, message: \"Yo\" },\n    { id: 5, message: \"Yo\" }\n  ],\n  dialogs: [\n    { id: 1, name: \"Dimych\" },\n    { id: 2, name: \"Andrew\" },\n    { id: 3, name: \"Sveta\" },\n    { id: 4, name: \"Sasha\" },\n    { id: 5, name: \"Viktor\" },\n    { id: 6, name: \"Valera\" }\n  ],\n  newMessageBody: \"\"\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_NEW_MESSAGE_BODY:{\n      return {\n        ...state,\n        newMessageBody: action.body,\n      };\n    };\n    case SEND_MESSAGE:{\n      return {...state,\n        messages: [\n          ...state.messages, \n          {\n            id: Date.now(),\n            message: state.newMessageBody\n          }\n      ],\n      newMessageBody: \"\",\n      };\n    };\n    default:\n      return state;\n  }\n};\n\nexport const updateMessageActionCreator = massage => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body: massage\n});\nexport const sendMassageActionCreator = () => ({ type: SEND_MESSAGE });\n\nexport default dialogsReducer;\n"]},"metadata":{},"sourceType":"module"}