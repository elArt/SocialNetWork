{"ast":null,"code":"import _toConsumableArray from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { usersAPI } from \"./../api/api\";\nvar FOLLOW = \"FOLLOW\";\nvar UNFOLLOW = \"UNFOLLOW\";\nvar SET_USERS = \"SET-USERS\";\nvar USER_COUNT = \"USER-COUNT\";\nvar CURRENT_PAGE = \"CURRENT-PAGE\";\nvar IS_FETCHING = \"IS-FETCHING\";\nvar TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\nvar initialState = {\n  users: [],\n  pageSize: 50,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetchingValue: false,\n  followingInProgress: []\n};\n\nvar usersReducer = function usersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      {\n        return _objectSpread({}, state, {\n          users: state.users.map(function (u) {\n            if (u.id === action.userId) {\n              return _objectSpread({}, u, {\n                followed: true\n              });\n            }\n\n            return u;\n          })\n        });\n      }\n\n    case UNFOLLOW:\n      {\n        return _objectSpread({}, state, {\n          users: state.users.map(function (u) {\n            if (u.id === action.userId) {\n              return _objectSpread({}, u, {\n                followed: false\n              });\n            }\n\n            return u;\n          })\n        });\n      }\n\n    case SET_USERS:\n      {\n        return _objectSpread({}, state, {\n          users: _toConsumableArray(action.users)\n        });\n      }\n\n    case USER_COUNT:\n      {\n        return _objectSpread({}, state, {\n          totalUsersCount: action.count\n        });\n      }\n\n    case CURRENT_PAGE:\n      {\n        return _objectSpread({}, state, {\n          currentPage: action.page\n        });\n      }\n\n    case IS_FETCHING:\n      {\n        return _objectSpread({}, state, {\n          isFetchingValue: action.isFetchingValue\n        });\n      }\n\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      {\n        return _objectSpread({}, state, {\n          followingInProgress: action.isFetching ? _toConsumableArray(state.followingInProgress).concat([action.userId]) : [state.followingInProgress.filter(function (id) {\n            return id !== action.userId;\n          })]\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport var followSuccess = function followSuccess(userId) {\n  return {\n    type: FOLLOW,\n    userId: userId\n  };\n};\nexport var unfollowSuccess = function unfollowSuccess(userId) {\n  return {\n    type: UNFOLLOW,\n    userId: userId\n  };\n};\nexport var setUsers = function setUsers(users) {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport var setTotalUsersCount = function setTotalUsersCount(count) {\n  return {\n    type: USER_COUNT,\n    count: count\n  };\n};\nexport var setCurrentPage = function setCurrentPage(page) {\n  return {\n    type: CURRENT_PAGE,\n    page: page\n  };\n};\nexport var isFatchingFunc = function isFatchingFunc(isFetchingValue) {\n  return {\n    type: IS_FETCHING,\n    isFetchingValue: isFetchingValue\n  };\n};\nexport var toggleFollowingProgress = function toggleFollowingProgress(isFetching, userId) {\n  return {\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching: isFetching,\n    userId: userId\n  };\n};\nexport var getUsers = function getUsers(currentPage, pageSize) {\n  return function (dispatch) {\n    console.log(dispatch);\n    dispatch(setCurrentPage(currentPage));\n    dispatch(isFatchingFunc(true));\n    usersAPI.getUsers(currentPage, pageSize).then(function (data) {\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n      dispatch(isFatchingFunc(false));\n    });\n  };\n};\nexport var follow = function follow(userId) {\n  return function (dispatch) {\n    dispatch(toggleFollowingProgress(true, userId));\n    usersAPI.follow(userId).then(function (response) {\n      if (response.data.resultCode === 0) {\n        props.followSuccess(userId);\n      }\n\n      dispatch(toggleFollowingProgress(false, userId));\n    });\n  };\n};\nexport var unfollow = function unfollow(userId) {\n  return function (dispatch) {\n    dispatch(toggleFollowingProgress(true, userId));\n    usersAPI.follow(userId).then(function (response) {\n      if (response.data.resultCode === 0) {\n        props.unfollowSuccess(userId);\n      }\n\n      dispatch(toggleFollowingProgress(false, userId));\n    });\n  };\n};\nexport default usersReducer;","map":{"version":3,"sources":["/home/artst/Public/Way of samuray/src/redux/users-reducer.js"],"names":["usersAPI","FOLLOW","UNFOLLOW","SET_USERS","USER_COUNT","CURRENT_PAGE","IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetchingValue","followingInProgress","usersReducer","state","action","type","map","u","id","userId","followed","count","page","isFetching","filter","followSuccess","unfollowSuccess","setUsers","setTotalUsersCount","setCurrentPage","isFatchingFunc","toggleFollowingProgress","getUsers","dispatch","console","log","then","data","items","totalCount","follow","response","resultCode","props","unfollow"],"mappings":"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","sourcesContent":["import {usersAPI} from \"./../api/api\";\n\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET-USERS\";\nconst USER_COUNT = \"USER-COUNT\";\nconst CURRENT_PAGE = \"CURRENT-PAGE\";\nconst IS_FETCHING = \"IS-FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\n\nconst initialState = {\n  users: [],\n  pageSize: 50,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetchingValue: false,\n  followingInProgress: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW: {\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userId) {\n            return { ...u, followed: true };\n          }\n          return u;\n        }),\n      };\n    }\n    case UNFOLLOW: {\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userId) {\n            return { ...u, followed: false };\n          }\n          return u;\n        }),\n      };\n    }\n    case SET_USERS: {\n      return { ...state, users: [...action.users] };\n    }\n    case USER_COUNT: {\n      return { ...state, totalUsersCount: action.count };\n    }\n    case CURRENT_PAGE: {\n      return { ...state, currentPage: action.page };\n    }\n    case IS_FETCHING: {\n        return { ...state, isFetchingValue: action.isFetchingValue };\n      }\n    case TOGGLE_IS_FOLLOWING_PROGRESS: {      \n      return { \n          ...state, \n          followingInProgress: action.isFetching \n          ? [...state.followingInProgress, action.userId] \n          : [state.followingInProgress.filter(id=>id!==action.userId)] \n        };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsers = (users) => ({ type: SET_USERS, users });\nexport const setTotalUsersCount = (count) => ({ type: USER_COUNT, count });\nexport const setCurrentPage = (page) => ({ type: CURRENT_PAGE, page });\nexport const isFatchingFunc = (isFetchingValue) => ({ type: IS_FETCHING, isFetchingValue });\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId });\n\nexport const getUsers = (currentPage, pageSize) =>{\n  return (dispatch) => {\n    console.log(dispatch);\n    dispatch(setCurrentPage(currentPage));\n    dispatch(isFatchingFunc(true));\n    usersAPI.getUsers(currentPage, pageSize).then(data => {\n      dispatch(setUsers(data.items));\n      dispatch(setTotalUsersCount(data.totalCount));\n      dispatch(isFatchingFunc(false));\n    });\n  };\n};\n\nexport const follow = (userId) =>{\n  return (dispatch) => {\n    dispatch(toggleFollowingProgress(true,  userId));\n    usersAPI.follow(userId)\n      .then(response => {\n          if (response.data.resultCode === 0) {\n              props.followSuccess(userId);\n          }\n          dispatch(toggleFollowingProgress(false, userId));\n      });\n  };\n};\n\nexport const unfollow = (userId) =>{\n  return (dispatch) => {\n    dispatch(toggleFollowingProgress(true,  userId));\n    usersAPI.follow(userId)\n      .then(response => {\n          if (response.data.resultCode === 0) {\n              props.unfollowSuccess(userId);\n          }\n          dispatch(toggleFollowingProgress(false, userId));\n      });\n  };\n};\n\n\n\n\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}