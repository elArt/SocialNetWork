{"ast":null,"code":"import _objectSpread from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { authAPI } from \"../api/api\";\nvar SET_USER_DATA = 'SET_USER_DATA';\nvar initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return _objectSpread({}, state, action.data, {\n        isAuth: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport var setAuthUserData = function setAuthUserData(userId, email, login) {\n  return {\n    type: SET_USER_DATA,\n    data: {\n      userId: userId,\n      email: email,\n      login: login\n    }\n  };\n};\nexport var getAuthUserData = function getAuthUserData() {\n  return function (dispatch) {\n    authAPI.me().then(function (response) {\n      if (response.data.resultCode === 0) {\n        var _response$data$data = response.data.data,\n            id = _response$data$data.id,\n            login = _response$data$data.login,\n            email = _response$data$data.email;\n        dispatch(setAuthUserData(id, email, login));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["/home/artst/Public/Way of samuray/src/redux/auth-reducer.js"],"names":["authAPI","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","data","setAuthUserData","getAuthUserData","dispatch","me","then","response","resultCode","id"],"mappings":";AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,IAAMC,aAAa,GAAG,eAAtB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,IADO;AAEfC,EAAAA,KAAK,EAAE,IAFQ;AAGfC,EAAAA,KAAK,EAAE,IAHQ;AAIfC,EAAAA,MAAM,EAAE;AAJO,CAAnB;;AAOA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,aAAL;AAEI,+BACOO,KADP,EAEOC,MAAM,CAACE,IAFd;AAGIL,QAAAA,MAAM,EAAE;AAHZ;;AAMJ;AACI,aAAOE,KAAP;AAVR;AAYH,CAbD;;AAgBA,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB;AAAA,SAA2B;AAACK,IAAAA,IAAI,EAAET,aAAP;AAAsBU,IAAAA,IAAI,EAAE;AAACR,MAAAA,MAAM,EAANA,MAAD;AAASC,MAAAA,KAAK,EAALA,KAAT;AAAgBC,MAAAA,KAAK,EAALA;AAAhB;AAA5B,GAA3B;AAAA,CAAxB;AACP,OAAO,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAClC,SAAO,UAACC,QAAD,EAAc;AAACd,IAAAA,OAAO,CAACe,EAAR,GAAaC,IAAb,CAAkB,UAACC,QAAD,EAAc;AAC7C,UAAIA,QAAQ,CAACN,IAAT,CAAcO,UAAd,KAA6B,CAAjC,EAAoC;AAAA,kCACPD,QAAQ,CAACN,IAAT,CAAcA,IADP;AAAA,YAC3BQ,EAD2B,uBAC3BA,EAD2B;AAAA,YACvBd,KADuB,uBACvBA,KADuB;AAAA,YAChBD,KADgB,uBAChBA,KADgB;AAEhCU,QAAAA,QAAQ,CAACF,eAAe,CAACO,EAAD,EAAKf,KAAL,EAAYC,KAAZ,CAAhB,CAAR;AACH;AACJ,KALgB;AAMpB,GANF;AAOF,CARM;AASP,eAAeE,WAAf","sourcesContent":["import { authAPI } from \"../api/api\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login) => ({type: SET_USER_DATA, data: {userId, email, login}  })\nexport const getAuthUserData = () => {\n   return (dispatch) => {authAPI.me().then((response) => {\n            if (response.data.resultCode === 0) {\n                let {id, login, email} = response.data.data;\n                dispatch(setAuthUserData(id, email, login));\n            }\n        });\n    }   \n}\nexport default authReducer; "]},"metadata":{},"sourceType":"module"}