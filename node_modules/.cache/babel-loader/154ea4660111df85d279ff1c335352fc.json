{"ast":null,"code":"import _classCallCheck from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/artst/Public/Way of samuray/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Users from \"./Users\";\nimport { follow, unfollow, setUsers, setTotalUsersCount, setCurrentPage, isFatchingFunc } from \"./../../redux/users-reducer\";\nimport * as axios from \"axios\";\n\nvar UsersContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UsersContainer, _React$Component);\n\n  function UsersContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UsersContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UsersContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.changePage = function (page) {\n      _this.props.setCurrentPage(page);\n\n      _this.props.isFatchingFunc(true);\n\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(page, \"&count=\").concat(_this.props.pageSize)).then(function (response) {\n        _this.props.isFatchingFunc(false);\n\n        _this.props.setUsers(response.data.items);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UsersContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.isFatchingFunc(true);\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?page=\".concat(this.props.currentPage, \"&count=\").concat(this.props.pageSize)).then(function (response) {\n        _this2.props.setUsers(response.data.items);\n\n        _this2.props.setTotalUsersCount(response.data.totalCount);\n\n        _this2.props.isFatchingFunc(false);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        changePage: this.changePage,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        isFetchingValue: this.props.isFetchingValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return UsersContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetchingValue: state.usersPage.isFetchingValue\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow: follow,\n  unfollow: unfollow,\n  setUsers: setUsers,\n  setTotalUsersCount: setTotalUsersCount,\n  setCurrentPage: setCurrentPage,\n  isFatchingFunc: isFatchingFunc\n})(UsersContainer);","map":{"version":3,"sources":["/home/artst/Public/Way of samuray/src/components/Users/UsersContainer.jsx"],"names":["React","connect","Users","follow","unfollow","setUsers","setTotalUsersCount","setCurrentPage","isFatchingFunc","axios","UsersContainer","changePage","page","props","get","pageSize","then","response","data","items","currentPage","totalCount","totalUsersCount","users","isFetchingValue","Component","mapStateToProps","state","usersPage"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SACEC,MADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,kBAJF,EAKEC,cALF,EAMEC,cANF,QAOO,6BAPP;AAQA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;IAEMC,c;;;;;;;;;;;;;;;;;;UAgBJC,U,GAAa,UAACC,IAAD,EAAU;AACrB,YAAKC,KAAL,CAAWN,cAAX,CAA0BK,IAA1B;;AACA,YAAKC,KAAL,CAAWL,cAAX,CAA0B,IAA1B;;AACAC,MAAAA,KAAK,CACFK,GADH,mEAE+DF,IAF/D,oBAGM,MAAKC,KAAL,CAAWE,QAHjB,GAMGC,IANH,CAMQ,UAACC,QAAD,EAAc;AAClB,cAAKJ,KAAL,CAAWL,cAAX,CAA0B,KAA1B;;AACA,cAAKK,KAAL,CAAWR,QAAX,CAAoBY,QAAQ,CAACC,IAAT,CAAcC,KAAlC;AACD,OATH;AAUD,K;;;;;;;wCA5BmB;AAAA;;AAClB,WAAKN,KAAL,CAAWL,cAAX,CAA0B,IAA1B;AACAC,MAAAA,KAAK,CACFK,GADH,mEAGM,KAAKD,KAAL,CAAWO,WAHjB,oBAIc,KAAKP,KAAL,CAAWE,QAJzB,GAMGC,IANH,CAMQ,UAACC,QAAD,EAAc;AAClB,QAAA,MAAI,CAACJ,KAAL,CAAWR,QAAX,CAAoBY,QAAQ,CAACC,IAAT,CAAcC,KAAlC;;AACA,QAAA,MAAI,CAACN,KAAL,CAAWP,kBAAX,CAA8BW,QAAQ,CAACC,IAAT,CAAcG,UAA5C;;AACA,QAAA,MAAI,CAACR,KAAL,CAAWL,cAAX,CAA0B,KAA1B;AACD,OAVH;AAWD;;;6BAgBQ;AACP,aACE,oBAAC,KAAD;AACE,QAAA,eAAe,EAAE,KAAKK,KAAL,CAAWS,eAD9B;AAEE,QAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWE,QAFvB;AAGE,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWO,WAH1B;AAIE,QAAA,UAAU,EAAE,KAAKT,UAJnB;AAKE,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWU,KALpB;AAME,QAAA,MAAM,EAAE,KAAKV,KAAL,CAAWV,MANrB;AAOE,QAAA,QAAQ,EAAE,KAAKU,KAAL,CAAWT,QAPvB;AAQE,QAAA,eAAe,EAAE,KAAKS,KAAL,CAAWW,eAR9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD;;;;EA3C0BxB,KAAK,CAACyB,S;;AA8CnC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLJ,IAAAA,KAAK,EAAEI,KAAK,CAACC,SAAN,CAAgBL,KADlB;AAELR,IAAAA,QAAQ,EAAEY,KAAK,CAACC,SAAN,CAAgBb,QAFrB;AAGLO,IAAAA,eAAe,EAAEK,KAAK,CAACC,SAAN,CAAgBN,eAH5B;AAILF,IAAAA,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJxB;AAKLI,IAAAA,eAAe,EAAEG,KAAK,CAACC,SAAN,CAAgBJ;AAL5B,GAAP;AAOD,CARD;;AAWA,eAAevB,OAAO,CACpByB,eADoB,EACH;AAACvB,EAAAA,MAAM,EAANA,MAAD;AAASC,EAAAA,QAAQ,EAARA,QAAT;AAAmBC,EAAAA,QAAQ,EAARA,QAAnB;AAA6BC,EAAAA,kBAAkB,EAAlBA,kBAA7B;AAAiDC,EAAAA,cAAc,EAAdA,cAAjD;AAAiEC,EAAAA,cAAc,EAAdA;AAAjE,CADG,CAAP,CAEZE,cAFY,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Users from \"./Users\";\nimport {\n  follow,\n  unfollow,\n  setUsers,\n  setTotalUsersCount,\n  setCurrentPage,\n  isFatchingFunc,\n} from \"./../../redux/users-reducer\";\nimport * as axios from \"axios\";\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    this.props.isFatchingFunc(true);\n    axios\n      .get(\n        `https://social-network.samuraijs.com/api/1.0/users?page=${\n          this.props.currentPage\n        }&count=${this.props.pageSize}`\n      )\n      .then((response) => {\n        this.props.setUsers(response.data.items);\n        this.props.setTotalUsersCount(response.data.totalCount);\n        this.props.isFatchingFunc(false);\n      });\n  }\n\n  changePage = (page) => {\n    this.props.setCurrentPage(page);\n    this.props.isFatchingFunc(true);\n    axios\n      .get(\n        `https://social-network.samuraijs.com/api/1.0/users?page=${page}&count=${\n          this.props.pageSize\n        }`\n      )\n      .then((response) => {\n        this.props.isFatchingFunc(false);\n        this.props.setUsers(response.data.items);\n      });\n  };\n  render() {\n    return (\n      <Users\n        totalUsersCount={this.props.totalUsersCount}\n        pageSize={this.props.pageSize}\n        currentPage={this.props.currentPage}\n        changePage={this.changePage}\n        users={this.props.users}\n        follow={this.props.follow}\n        unfollow={this.props.unfollow}\n        isFetchingValue={this.props.isFetchingValue}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetchingValue: state.usersPage.isFetchingValue,\n  };\n};\n\n\nexport default connect(\n  mapStateToProps, {follow, unfollow, setUsers, setTotalUsersCount, setCurrentPage, isFatchingFunc,\n})(UsersContainer);\n"]},"metadata":{},"sourceType":"module"}