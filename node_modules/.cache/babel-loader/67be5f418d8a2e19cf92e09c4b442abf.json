{"ast":null,"code":"import _classCallCheck from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/artst/Public/Way of samuray/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/artst/Public/Way of samuray/src/components/Profile/ProfileContainer.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Profile from \"./Profile\";\nimport { getUserProfile, setUserProfile } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { usersAPI } from \"../../api/api\";\n\nvar ProfileContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileContainer, _React$Component);\n\n  function ProfileContainer() {\n    _classCallCheck(this, ProfileContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProfileContainer).apply(this, arguments));\n  }\n\n  _createClass(ProfileContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userId = this.props.match.params.userId;\n\n      if (!userId) {\n        userId = 2;\n      }\n\n      usersAPI.getUserProfile(userId).then(function (response) {\n        dispatch(setUserProfile(response.data));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Profile, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProfileContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profilePage.profile\n  };\n};\n\nvar ProfileContainerWithRouter = withRouter(ProfileContainer);\nexport default connect(mapStateToProps, {\n  getUserProfile: getUserProfile,\n  setUserProfile: setUserProfile\n})(ProfileContainerWithRouter);","map":{"version":3,"sources":["/home/artst/Public/Way of samuray/src/components/Profile/ProfileContainer.js"],"names":["React","connect","Profile","getUserProfile","setUserProfile","withRouter","usersAPI","ProfileContainer","userId","props","match","params","then","response","dispatch","data","Component","mapStateToProps","state","profile","profilePage","ProfileContainerWithRouter"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,6BAA/C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,eAAzB;;IAEMC,gB;;;;;;;;;;;;;wCACgB;AAClB,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,UAAI,CAACA,MAAL,EAAa;AACXA,QAAAA,MAAM,GAAG,CAAT;AACD;;AACDF,MAAAA,QAAQ,CAACH,cAAT,CAAwBK,MAAxB,EAAgCI,IAAhC,CAAqC,UAACC,QAAD,EAAc;AACjDC,QAAAA,QAAQ,CAACV,cAAc,CAACS,QAAQ,CAACE,IAAV,CAAf,CAAR;AACD,OAFD;AAID;;;6BACQ;AACP,aAAO,oBAAC,OAAD,oBAAa,KAAKN,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD;;;;EAb4BT,KAAK,CAACgB,S;;AAgBrC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AAAEC,IAAAA,OAAO,EAAED,KAAK,CAACE,WAAN,CAAkBD;AAA7B,GAAP;AACD,CAFD;;AAGA,IAAME,0BAA0B,GAAGhB,UAAU,CAACE,gBAAD,CAA7C;AAEA,eAAeN,OAAO,CACpBgB,eADoB,EAEpB;AAAEd,EAAAA,cAAc,EAAdA,cAAF;AACEC,EAAAA,cAAc,EAAdA;AADF,CAFoB,CAAP,CAIbiB,0BAJa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Profile from \"./Profile\";\nimport { getUserProfile, setUserProfile } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { usersAPI } from \"../../api/api\";\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = 2;\n    }\n    usersAPI.getUserProfile(userId).then((response) => {\n      dispatch(setUserProfile(response.data));\n    });\n\n  }\n  render() {\n    return <Profile {...this.props} />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { profile: state.profilePage.profile };\n};\nconst ProfileContainerWithRouter = withRouter(ProfileContainer);\n\nexport default connect(\n  mapStateToProps,\n  { getUserProfile,\n    setUserProfile }\n)(ProfileContainerWithRouter);\n"]},"metadata":{},"sourceType":"module"}